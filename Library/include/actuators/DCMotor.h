//
//  DCMotor.h
//  Stonefish
//
//  Created by Patryk Cieslak on 1/11/13.
//  Copyright (c) 2013-2018 Patryk Cieslak. All rights reserved.
//

#ifndef __Stonefish_DCMotor__
#define __Stonefish_DCMotor__

#include "actuators/Motor.h"

namespace sf
{
    //! A class representing a model of a DC motor.
    class DCMotor : public Motor
    {
    public:
        //! A constructor.
        /*!
         \param uniqueName a name for the motor
         \param motorR the resistance of the motor [Ohm]
         \param motorL the inductance of the motor [H]
         \param motorKe the speed constant of the motor [V/rpm]
         \param motorKt the torque constant of the motor [Nm/A]
         \param friction the friction coefficient
         */
        DCMotor(std::string uniqueName, Scalar motorR, Scalar motorL, Scalar motorKe, Scalar motorKt, Scalar friction);
        
        //! A method used to update the internal state of the motor.
        /*!
         \param dt a time step of the simulation [s]
         */
        void Update(Scalar dt);
        
        //! A method to setup a simulated gearbox connected to the motor.
        /*!
         \param enable a flag to indicate if the gearbox should be enabled
         \param ratio a gear ratio
         \param efficiency an efficiency factor
         */
        void SetupGearbox(bool enable, Scalar ratio, Scalar efficiency);
        
        //! A method to set the voltage driving the motor.
        /*!
         \param volt the voltage at the motor terminals [V]
         */
        void setIntensity(Scalar volt);
        
        //! A method returning the torque generated by the motor.
        Scalar getTorque();
        
        //! A method returning the angular position of the motor.
        Scalar getAngle();
        
        //! A method returning the angular velocity of the motor.
        Scalar getAngularVelocity();
        
        //! A method returning the current in the motor windings.
        Scalar getCurrent();
        
        //! A method returning the voltage at the motor terminals.
        Scalar getVoltage();
        
        //! A method returning the resistance of the motor windings.
        Scalar getR();
        
        //! A method returning the inductance of the motor windings.
        Scalar getL();
        
        //! A method returning the velocity constant of the motor.
        Scalar getKe();
        
        //! A method returning the torque constant of the motor.
        Scalar getKt();
        
        //! A method returning the ratio of the motor gearbox.
        Scalar getGearRatio();
        
    private:
        Scalar V;
        Scalar I;
        Scalar R;
        Scalar L;
        Scalar Ke;
        Scalar Kt;
        Scalar B;
        bool gearEnabled;
        Scalar gearRatio;
        Scalar gearEff;
        Scalar lastVoverL;
    };
}

#endif
