#version 430 core

layout(quads, equal_spacing, ccw) in;

uniform sampler2DArray texWaveFFT;
uniform mat4 MVP;
uniform vec4 gridSizes;
uniform vec4 choppyFactor;

vec4 interpolate(in vec4 v0, in vec4 v1, in vec4 v2, in vec4 v3)
{
	vec4 a = mix(v0, v1, gl_TessCoord.x);
	vec4 b = mix(v3, v2, gl_TessCoord.x);
	return mix(a, b, gl_TessCoord.y);
}

void main()
{
	vec4 pos = interpolate(gl_in[0].gl_Position, gl_in[1].gl_Position, gl_in[2].gl_Position, gl_in[3].gl_Position); 
	
	pos.z += texture(texWaveFFT, vec3(pos.xy / gridSizes.x, 0.0)).x;
	pos.z += texture(texWaveFFT, vec3(pos.xy / gridSizes.y, 0.0)).y;
	pos.z += texture(texWaveFFT, vec3(pos.xy / gridSizes.z, 0.0)).z;
	pos.z += texture(texWaveFFT, vec3(pos.xy / gridSizes.w, 0.0)).w;
	
	pos.xy += choppyFactor.x * texture(texWaveFFT, vec3(pos.xy / gridSizes.x, 3.0)).xy;
	pos.xy += choppyFactor.y * texture(texWaveFFT, vec3(pos.xy / gridSizes.y, 3.0)).zw;
	pos.xy += choppyFactor.z * texture(texWaveFFT, vec3(pos.xy / gridSizes.z, 4.0)).xy;
	pos.xy += choppyFactor.w * texture(texWaveFFT, vec3(pos.xy / gridSizes.w, 4.0)).zw;
	
	gl_Position = MVP * pos;
}